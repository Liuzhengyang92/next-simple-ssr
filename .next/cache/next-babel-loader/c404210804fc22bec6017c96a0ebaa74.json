{"ast":null,"code":"var _jsxFileName = \"/Users/zhengyangliu/Project/frontend/junior-to-senior-web-developer/next-ssr/pages/robots/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Card from '../../components/Card';\nimport SearchBox from '../../components/SearchBox';\nimport * as styles from 'index.less';\n\nconst Robots = props => {\n  const robotRef = React.createRef();\n  const [filteredRobots, setFilteredRobots] = React.useState(props.robots);\n\n  const onSearchFieldChange = event => {\n    const filteredRobots = props.robots.filter(robot => robot.name.toLocaleLowerCase().includes(event.target.value));\n    setFilteredRobots(filteredRobots);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(SearchBox, {\n    onSearchChange: onSearchFieldChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, filteredRobots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: `robots/${robot.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, __jsx(Card, {\n    name: robot.name,\n    id: robot.id,\n    email: robot.email,\n    ref: robotRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  console.log(data);\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/zhengyangliu/Project/frontend/junior-to-senior-web-developer/next-ssr/pages/robots/index.js"],"names":["React","Link","fetch","Card","SearchBox","styles","Robots","props","robotRef","createRef","filteredRobots","setFilteredRobots","useState","robots","onSearchFieldChange","event","filter","robot","name","toLocaleLowerCase","includes","target","value","container","map","id","email","getInitialProps","res","data","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,QAAQ,GAAGR,KAAK,CAACS,SAAN,EAAjB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,KAAK,CAACY,QAAN,CAAeL,KAAK,CAACM,MAArB,CAA5C;;AACA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrC,UAAML,cAAc,GAAGH,KAAK,CAACM,MAAN,CAAaG,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,iBAAX,GAA+BC,QAA/B,CAAwCL,KAAK,CAACM,MAAN,CAAaC,KAArD,CAA7B,CAAvB;AACAX,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,EAKE,MAAC,SAAD;AAAW,IAAA,cAAc,EAAET,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,cAAc,CAACc,GAAf,CAAmBP,KAAK,IACtB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,UAASR,KAAK,CAACQ,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAER,KAAK,CAACC,IAAlB;AAAwB,IAAA,EAAE,EAAED,KAAK,CAACQ,EAAlC;AAAsC,IAAA,KAAK,EAAER,KAAK,CAACS,KAAnD;AAA0D,IAAA,GAAG,EAAElB,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CAFJ,CANF,CADF;AAqBD,CA7BD;;AA+BAF,MAAM,CAACqB,eAAP,GAAyB,kBAAkB;AACzC,QAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAM2B,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO;AACLhB,IAAAA,MAAM,EAAEgB;AADH,GAAP;AAGD,CAPD;;AASA,eAAevB,MAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Card from '../../components/Card';\nimport SearchBox from '../../components/SearchBox';\nimport * as styles from 'index.less';\n\nconst Robots = (props) => {\n  const robotRef = React.createRef();\n  const [filteredRobots, setFilteredRobots] = React.useState(props.robots);\n  const onSearchFieldChange = (event) => {\n    const filteredRobots = props.robots.filter(robot => robot.name.toLocaleLowerCase().includes(event.target.value));\n    setFilteredRobots(filteredRobots);\n  }\n\n  return (\n    <div className={styles.container}>\n      <h1>Robots</h1>\n      <Link href='/'>\n        <button>Home</button>\n      </Link>\n      <SearchBox onSearchChange={onSearchFieldChange} />\n      <div>\n        {\n          filteredRobots.map(robot => (\n            <li key={robot.id}>\n              <Link href={`robots/${robot.id}`}>\n                {/* <a>{robot.name}</a> */}\n                <Card name={robot.name} id={robot.id} email={robot.email} ref={robotRef} />\n              </Link>\n            </li>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  const data = await res.json();\n  console.log(data);\n  return {\n    robots: data\n  }\n}\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}