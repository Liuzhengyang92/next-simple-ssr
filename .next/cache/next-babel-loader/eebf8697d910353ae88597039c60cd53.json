{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhengyangliu/Project/frontend/junior-to-senior-web-developer/next-ssr/pages/robots/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Card from '../../components/Card';\nimport SearchBox from '../../components/SearchBox';\n\nvar Robots = function Robots(props) {\n  _s();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchField = _React$useState2[0],\n      setSearchField = _React$useState2[1];\n\n  var onSearchFieldChange = function onSearchFieldChange(event) {\n    console.log(event.target.value);\n    setSearchField(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(SearchBox, {\n    onSearchChange: onSearchFieldChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"robots/\".concat(robot.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, __jsx(Card, {\n      name: robot.name,\n      id: robot.id,\n      email: robot.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    })));\n  })));\n};\n\n_s(Robots, \"VGd9Bn50RPD7o2JX3FSqKKNwMHU=\");\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["/Users/zhengyangliu/Project/frontend/junior-to-senior-web-developer/next-ssr/pages/robots/index.js"],"names":["React","Link","fetch","Card","SearchBox","Robots","props","useState","searchField","setSearchField","onSearchFieldChange","event","console","log","target","value","robots","map","robot","id","name","email","getInitialProps","res","json","data"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA,wBACcN,KAAK,CAACO,QAAN,CAAe,EAAf,CADd;AAAA;AAAA,MACjBC,WADiB;AAAA,MACJC,cADI;;AAExB,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,cAAc,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAd;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,EAKE,MAAC,SAAD;AAAW,IAAA,cAAc,EAAEL,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,KAAK,CAACU,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYD,KAAK,CAACC,EAAlB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,KAAK,CAACE,IAAlB;AAAwB,MAAA,EAAE,EAAEF,KAAK,CAACC,EAAlC;AAAsC,MAAA,KAAK,EAAED,KAAK,CAACG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADoB;AAAA,GAAtB,CAFJ,CANF,CADF;AAqBD,CA3BD;;GAAMhB,M;;KAAAA,M;AA6BNA,MAAM,CAACiB,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLpB,KAAK,CAAC,4CAAD,CADA;;AAAA;AACjBqB,UAAAA,GADiB;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAGvBb,UAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AAHuB,2CAIhB;AACLT,YAAAA,MAAM,EAAES;AADH,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASA,eAAepB,MAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Card from '../../components/Card';\nimport SearchBox from '../../components/SearchBox';\n\nconst Robots = (props) => {\n  const [searchField, setSearchField] = React.useState('');\n  const onSearchFieldChange = (event) => {\n    console.log(event.target.value);\n    setSearchField(event.target.value);\n  }\n  return (\n    <div>\n      <h1>Robots</h1>\n      <Link href='/'>\n        <button>Home</button>\n      </Link>\n      <SearchBox onSearchChange={onSearchFieldChange} />\n      <div>\n        {\n          props.robots.map(robot => (\n            <li key={robot.id}>\n              <Link href={`robots/${robot.id}`}>\n                <Card name={robot.name} id={robot.id} email={robot.email} />\n                {/* <a>{robot.name}</a> */}\n              </Link>\n            </li>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  const data = await res.json();\n  console.log(data);\n  return {\n    robots: data\n  }\n}\n\nexport default Robots;\n"]},"metadata":{},"sourceType":"module"}